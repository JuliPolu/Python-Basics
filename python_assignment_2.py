
# Task 1 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
"""1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе."""

my_list = [3, 8, 'good', True, (2, 8), {'Oct': 10}]

for i in my_list:
    print(type(i))

# Task 2 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
"""2. Для списка реализовать обмен значений соседних элементов, т.е. 
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте.
Для заполнения списка элементов необходимо использовать функцию input()."""

input_list = input('Введите список слов или цифр через запятую без пробелов: ')

my_list = input_list.split(",")

for index in range(0, len(my_list)-1, 2):
    my_list[index], my_list[index+1] = my_list[index+1], my_list[index]

print(my_list)

# Task 3.1 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
"""3. Пользователь вводит месяц в виде целого числа от 1 до 12. 
Сообщить к какому времени года относится месяц (зима, весна, лето, осень). Напишите решения через list и через dict."""

try:
    month_in = int(input('Введите номер месяца от 1 до 12: '))

except ValueError:
    print('Вы ввели не число')
    exit(1)

months_dict = {'зима': (12, 1, 2), 'весна': (3, 4, 5), 'лето': (6, 7, 8), 'осень': (9, 10, 11)}

if month_in >= 1 and month_in <= 12:
    for key, values in months_dict.items():
        if month_in in values:
            print(f'{month_in}-й месяц - {key}')
else:
    print('Такого месяца нет на планете Земля!')

# Task 3.2 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
try:
    month_in = int(input('Введите номер месяца от 1 до 12: '))

except ValueError:
    print('Вы ввели не число')
    exit(1)

winter = [12, 1, 2]
spring = [3, 4, 5]
summer = [6, 7, 8]
autumn = [6, 7, 8]

if month_in >= 1 and month_in <= 12:
    if month_in in winter:
        print(f'{month_in}-й месяц - зима')
    elif month_in in spring:
        print(f'{month_in}-й месяц - весна')
    elif month_in in summer:
        print(f'{month_in}-й месяц - лето')
    else:
        print(f'{month_in}-й месяц - осень')
else:
    print('Такого месяца нет на планете Земля!')

# Task 4 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
"""4. Пользователь вводит строку из нескольких слов, разделённых пробелами. 
Вывести каждое слово с новой строки. Строки необходимо пронумеровать. 
Если в слово длинное, выводить только первые 10 букв в слове."""

input_list = input('Введите строку из нескольких слов через пробелы: ')

my_list = input_list.split(" ")
n = 0

for n, w in enumerate(my_list, 1):
    print(f'{n}. {w[:10]}')
        

# Task 5 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
"""5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. 
У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2]."""

try:
    num_in = int(input('Введите целое натуральное число: '))
except ValueError:
    print('Некорректный ввод')
    exit(1)

my_list = [8, 4, 4, 3, 2]
my_list_copy = my_list.copy()
found = False

if num_in < 1:
    print('вы ввели отрицательное число!')
    num_in = int(input('Введите целое натуральное число: '))
else:
    if num_in > my_list_copy[0]:
        my_list_copy.insert(0, num_in)
    elif num_in < my_list_copy[-1]:
        my_list_copy.append(num_in)
    else:
        for num in my_list_copy:
            if num_in == num:
                num_index = my_list_copy.index(num)
                num_count = my_list_copy.count(num)
                num_in_index = num_index + num_count
                my_list_copy.insert(num_in_index, num_in)
                break
            elif num_in > num:
                my_list_copy.insert(my_list.index(num), num_in)
                break
            else:
                continue

print(my_list)
print(my_list_copy)

# # Task 6 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
"""6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами
(характеристиками товара: название, цена, количество, единица измерения). Структуру нужно сформировать программно, 
т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
а значение — список значений-характеристик, например список названий товаров.
Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}"""


analytics = []

while True:
    check_input = input('Continue input: y/n: ')
    if check_input == 'y':
        dict_input = dict({
            "название": input('Введите название товара: '),
            "цена": input('Введите цену товара: '),
            "количество": input('Введите количество товара: '),
            "ед": input('Введите единицу измерения: '),
        })
    elif check_input == 'n':
        break
    else:
        check_input = input('Continue input: y/n: ')
    

print(analytics)